@model Inventory
@{
    ViewBag.Title = "Редактировать инвентарь";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="~/css/Inventory/inventoryEdit.css">

<div class="container py-5">
    <div class="card shadow-lg border-0 edit-card">
        <div class="card-header bg-primary text-white py-3">
            <h2 class="mb-0"><i class="fas fa-edit me-2"></i>Редактировать инвентарь</h2>
        </div>

        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)

                <div class="row g-4">
                    <!-- Название -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Name, new { 
                                @class = "form-control form-control-lg", 
                                placeholder = "Название инвентаря",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Количество -->
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Quantity, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Quantity, new { 
                                @class = "form-control form-control-lg", 
                                type = "number",
                                min = "1",
                                placeholder = "Количество",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.Quantity, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <!-- Состояние -->
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Condition, new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(m => m.Condition, 
                                new SelectList(new[] { "Новый", "Испорченный", "Старый" }), 
                                "Выберите состояние", 
                                new { 
                                    @class = "form-select form-select-lg",
                                    required = "required"
                                })
                            @Html.ValidationMessageFor(m => m.Condition, null, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <button type="submit" class="btn btn-save btn-lg px-5">
                        <i class="fas fa-save me-2"></i>Сохранить
                    </button>
                </div>
            }
        </div>
    </div>
</div>
 
    <script>
        // Динамическое обновление стиля выпадающего списка
        $('.form-select').on('change', function() {
            if(this.value) {
                $(this).removeClass('is-invalid').addClass('is-valid');
            } else {
                $(this).removeClass('is-valid').addClass('is-invalid');
            }
        });
    </script>